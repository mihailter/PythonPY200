type: output
files:
- name: main.py
  visible: true
  placeholders:
  - offset: 373
    length: 96
    placeholder_text: |-
      #  TODO метод должен возвращать строку, которая содержит человеко-читаемую информацию
              ...
    initial_state:
      length: 97
      offset: 381
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: return f"Стакан объёмом {self.capacity_volume}. Объём
      жидкости = {self.occupied_volume}"
  text: |
    class Glass:
        def __init__(self, capacity_volume: [int, float], occupied_volume: [int, float]):
            self.capacity_volume = capacity_volume  # объем стакана
            self.occupied_volume = occupied_volume  # объем жидкости в стакане

        def __repr__(self) -> str:
            return f"Glass({self.capacity_volume}, {self.occupied_volume})"

        def __str__(self) -> str:
            #  TODO метод должен возвращать строку, которая содержит человеко-читаемую информацию
            ...


    if __name__ == "__main__":
        glass = Glass(200, 100)  # экземпляр класса

        print(glass)  # Glass(200, 100)
        print([Glass(i, i) for i in range(50, 251, 50)])  # [Glass(50, 50), Glass(100, 100), Glass(150, 150), Glass(200, 200), Glass(250, 250)]
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/output.txt
  visible: false
  text: |
    Стакан объёмом 200. Объём жидкости = 100
    [Glass(50, 50), Glass(100, 100), Glass(150, 150), Glass(200, 200), Glass(250, 250)]
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Thu, 02 Sep 2021 16:55:16 UTC
record: -1
